{"version":3,"sources":["services/apiMovieDetails.js","components/DetalisList/DetalisList.js","addRoutes.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/RoutesDetalis.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["fetchMovieDetail","id","axios","defaults","baseURL","url","get","then","response","data","catch","error","console","log","DetalisList","movie","genres","src","poster_path","alt","title","vote_average","overview","addRoutes","path","name","exact","component","lazy","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","withRouter","match","fallback","map","MovieDetailsPage","state","cast","isLoading","getMovie","props","params","movieId","results","setState","finally","getGenres","result","join","handleGoBack","location","history","push","from","routes","movies","this","className","type","onClick","to","pathname","Component"],"mappings":"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","file":"static/js/7.ab64ffca.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default function fetchMovieDetail(id) {\r\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/`;\r\n  let key = `f4c67ae87f1aa2e929a998967bea3a43`;\r\n  const url = `movie/${id}?api_key=${key}`;\r\n\r\n  return axios\r\n    .get(url)\r\n    .then((response) => response.data)\r\n    .catch((error) => console.log(error));\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nconst DetalisList = ({ movie, genres, url }) => {\r\n  return (\r\n    <div key={movie.id}>\r\n      <img src={url + movie.poster_path} alt={movie.title} />\r\n      <h2>{movie.title}</h2>\r\n      <h3>User score: </h3>\r\n      <p>{movie.vote_average * 10}%</p>\r\n      <h3>Genres: </h3>\r\n      <p>{genres}</p>\r\n      <h3>Overview: </h3>\r\n      <p>{movie.overview}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetalisList;\r\n","import { lazy } from \"react\";\r\n\r\nconst addRoutes = [\r\n  {\r\n    path: \"/cast\",\r\n    url: \"/cast\",\r\n    name: \"Cast\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"./components/Cast/Cast.js\" /* webpackChunkName: \"Cast\" */)\r\n    ),\r\n  },\r\n  {\r\n    path: \"/reviews\",\r\n    url: \"/reviews\",\r\n    name: \"Reviews\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"./components/Reviews/Reviews.js\" /* webpackChunkName: \"Reviews\" */)\r\n    ),\r\n  },\r\n];\r\n\r\nexport default addRoutes;\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import addRoutes from \"../addRoutes\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport React, { Suspense } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n// import Spinner from \"../../components/Spinner\";\r\n\r\nconst RoutesDetalis = ({ match, ...props }) => {\r\n  console.log(match);\r\n  return (\r\n    <Suspense fallback=\"Waiting...\">\r\n      <Switch>\r\n        {addRoutes.map(({ path, component, exact, url }) => (\r\n          <Route\r\n            key={path}\r\n            path={`${match.path}${url}`}\r\n            exact={exact}\r\n            component={component}\r\n          />\r\n        ))}\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default withRouter(RoutesDetalis);\r\n","import React, { Component } from \"react\";\r\nimport routes from \"../../../src/routes\";\r\nimport fetchMovieDetail from \"../../services/apiMovieDetails\";\r\nimport DetalisList from \"../../components/DetalisList/DetalisList\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport addRoutes from \"../../../src/addRoutes\";\r\nimport RoutesDetalies from \"../../components/RoutesDetalis\";\r\n// import getFetchCast from \"../../services/apiMovieCast\";\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n    genres: \"\",\r\n    cast: [],\r\n    id: \"\",\r\n    isLoading: false,\r\n    url: \"https://image.tmdb.org/t/p/w500\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovie();\r\n    this.getGenres();\r\n    // this.getCast();\r\n  }\r\n\r\n  getMovie = () => {\r\n    const { movieId } = this.props.match.params;\r\n    return fetchMovieDetail(movieId)\r\n      .then((results) => {\r\n        console.log(results);\r\n        this.setState({\r\n          movie: { ...results, id: this.props.match.params.movieId },\r\n        });\r\n      })\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  getGenres = () => {\r\n    const { movieId } = this.props.match.params;\r\n    return fetchMovieDetail(movieId)\r\n      .then((results) => results.genres)\r\n      .then((genres) => {\r\n        const result = genres\r\n          .map((id) => (id.name = \" \" + id.name))\r\n          .join(\",  \");\r\n        return this.setState({ genres: [result] });\r\n      })\r\n      .catch((error) => this.setState({ error }));\r\n  };\r\n\r\n  // getCast = () => {\r\n  //   const { movieId } = this.props.match.params;\r\n  //   return getFetchCast(movieId)\r\n  //     .then((results) => {\r\n  //       console.log(results);\r\n  //       this.setState({ cast: [...results] });\r\n  //     })\r\n  //     .catch((error) => this.setState({ error }));\r\n  //   // .finally(() => this.setState({ isLoading: false }));\r\n  // };\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n    history.push(location?.state?.from || routes.movies);\r\n  };\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    console.log(match);\r\n    const { movie, genres, url, id } = this.state;\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <button type=\"button\" onClick={this.handleGoBack}>\r\n          Go Back\r\n        </button>\r\n        <DetalisList movie={movie} genres={genres} url={url} />\r\n        \r\n        <ul className=\"List\">\r\n          {addRoutes.map(({ exact, name, url }) => (\r\n            <li>\r\n              <NavLink\r\n                exact={exact}\r\n                to={{\r\n                  pathname: `${match.url}${url}`,\r\n                  state: {\r\n                    from: this.props.location.state.from,\r\n                    id: id,\r\n                  },\r\n                }}\r\n              >\r\n                {name}\r\n              </NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <RoutesDetalies />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n\r\n// {\r\n//   /* <Switch>\r\n//           <Route path={`${match.path}:movieId/cast`} component={Cast} /> */\r\n// }\r\n// {\r\n//   /* <Route path=\"/movies/:movieId/reviews\" component={MoviesReviews} /> */\r\n// }\r\n// // </Switch>\r\n// {\r\n//   /* <Route\r\n//           path={`${match.path}:movieId/cast`}\r\n//           render={(props) => {\r\n//             // const momieId = Number(props.match.params.movieId);\r\n//             // const casts = cast.find(({ id }) => id === momieId);\r\n//             // console.log(casts);\r\n//             return (\r\n//               <ul>\r\n//                 {cast.map(({ name, profile_path, character, id }) => (\r\n//                   <li key={id}>\r\n//                     <img src={url + profile_path} alt={name} width=\"150\" />\r\n//                     <p>{name}</p>\r\n//                     <p>Character: {character}</p>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//               // <Cast cast={cast} url={url} />;\r\n//             );\r\n//           }}\r\n//         /> */\r\n// }\r\n"],"sourceRoot":""}